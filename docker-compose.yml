services:
  mongo:
    image: mongo:4.0.10
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: joboffers
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017
      ME_CONFIG_BASICAUTH_USERNAME: express
      ME_CONFIG_BASICAUTH_PASSWORD: express

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    platform: linux/amd64
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    restart: always

  joboffers:
    container_name: joboffers
#    build: .
    image: 585008054059.dkr.ecr.eu-central-1.amazonaws.com/joboffers:latest
    restart: always
    platform: linux/amd64
    depends_on:
      - redis
    ports:
      - "8000:8000"
    environment:
      MONGO_USER: admin
      MONGO_PASSWORD: admin
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DB_NAME: joboffers
      MONGO_AUTH_SOURCE: admin
      REDIS_HOST: redis
      REDIS_PORT: 6379